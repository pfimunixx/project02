schema:
  User:
    type: object
    title: User
    properties:
      id:
        format: int64
        type: integer
        example: null
      userName:
        example: pf@imunixx.de
        type: string
      password:
        example: 03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4
        type: string
      userCode:
        example: 0
        type: string
      profilesList:
        type: array
        items:
          $ref: '#/schema/Profile'
      userActivatedId:
        type: integer
        format: int64
        example: null
      userDataId:
        type: integer
        format: int64
        example: null

  UserCreate:
    type: object
    title: UserCreate
    properties:
      userName:
        example: pf@imunixx.de
        type: string
      password:
        example: 03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4
        type: string
      userCode:
        example: 0
        type: string
      firstName:
        type: string
        example: Felicitada
      surName:
        type: string
        example: ConstantementeHúmedaYDispuesta
      phone:
        type: string
        pattern: '^\+?[1-9]\d{1,14}$'
        example: +34666666666
          
  UserData:
    type: object
    title: information about the user
    properties:
      id:
        type: integer
        format: int64
        example: null
      userId:
        type: integer
        format: int64
        example: null
      firstName:
        type: string
        example: Felicitada
      surName:
        type: string
        example: ConstantementeHúmedaYDispuesta
      emailList:
        type: array
        items:
          $ref: '#/schema/Email'
      phoneList:    
        type: array
        items:
          $ref: '#/schema/Phone'

  UserActivated:
    type: object
    title: UserActivated
    properties:
      id:
        format: int64
        type: integer
        example: null
      userId:
        type: integer
        format: int64
        example: null
      isActivated:
        type: boolean

  Profile:
    type: object
    title: Profile
    properties:
      id:
        type: integer
        format: int64
        example: null
      userId:
        type: integer
        format: int64
      name:
        type: string
        example: Profile01
      movementsList:
        type: array
        items:
          $ref: '#/schema/Movement'
      fixedMovementsList:
        type: array
        items:
          $ref: '#/schema/FixedMovement'
      spendingExpectationsList:
        type: array
        items:
          $ref: '#/schema/SpendingExpectation'

  Movement:
    type: object
    title: Movement
    properties:
      id:
        type: integer
        format: int64
        example: null
      profileId:
        type: integer
        format: int64
      item:
        type: string
        example: Leisure
      description:
        type: string
        example: Beers friday night
      amount:
        type: string
        format: decimal
        example: 10.00
      dateTime:
        type: string
        format: date-time
        example: "2023-07-30T12:34:56Z"

  FixedMovement:
    type: object
    title: FixedMovement
    properties:
      id:
        type: integer
        format: int64
        example: null
      profileId:
        type: integer
        format: int64
      item:
        type: string
        example: Car assurance
      amount:
        type: string
        format: decimal
        example: 100.00
      startDate:
        type: string
        format: date
        example: "2023-07-30"
      endDate:
        type: string
        format: date
      transactionFrequency:
        type: string
        example: 3month

  SpendingExpectation:
    type: object
    title: SpendingExpectation
    properties:
      id:
        type: integer
        format: int64
        example: null
      profileId:
        type: integer
        format: int64
      item:
        type: string
        example: Leisure
      amount:
        type: string
        format: decimal
        example: 100.00
      spendingFrequency:
        type: string
        example: week

  Email:
    type: object
    title: Email
    properties:
      id:
        type: integer
        format: int64
        example: null
      userDataId:
        type: integer
        format: int64
      email:
        type: string
        format: email
        pattern: ^\S+@\S+\.\S+$
        example: a@a.com
      isLoginEmail:
        type: boolean

  Phone:
    type: object
    title: Phone
    properties:
      id:
        type: integer
        format: int64
        example: null
      userDataId:
        type: integer
        format: int64
      phoneType:
        type: string
        enum: [Home, Work, Mobile, Fax, Other]
      phone:
        type: string
        pattern: '^\+?[1-9]\d{1,14}$'
        example: +34666666666
          
#  Address:
#    type: object
#    title: user contact data
#    properties:
#      id:
#        type: integer
#        format: int64
#      userDataId:
#        type: integer
#        format: int64
#        example: 1
#      countryId:
#        type: integer
#        format: int64
#        example: 1
#      stateId:
#        type: integer
#        format: int64
#        example: 1
#      cityId:
#        type: integer
#        format: int64
#        example: 1
#      zipCode:
#        type: string
#      streetId:
#        type: integer
#        format: int64
#        example: 1
#      houseNumber:
#        type: string
#        pattern: '^[0-9a-zA-Z\s/-]+$'
#
#  Country:
#    type: object
#    title: Country
#    properties:
#      id:
#        type: integer
#        format: int64
#      countryName:
#        type: string
#        example: Spain
#      countryIsoCode:
#        type: string
#        example: Spain
#      addressList:
#        type: array
#        items:
#          $ref: '#/schema/Address'
#
#  State:
#    type: object
#    title: State
#    properties:
#      id:
#        type: integer
#        format: int64
#      stateName:
#        type: string
#        example: País Vasco
#      addressList:
#        type: array
#        items:
#          $ref: '#/schema/Address'
#
#  City:
#    type: object
#    title: City
#    properties:
#      id:
#        type: integer
#        format: int64
#      cityName:
#        type: string
#        example: Bilbao
#      addressList:
#        type: array
#        items:
#          $ref: '#/schema/Address'
#
#  Street:
#    type: object
#    title: Street
#    properties:
#      id:
#        type: integer
#        format: int64
#      streetName:
#        type: string
#        example: Gran Vía de Don Diego López de Haro
#      addressList:
#        type: array
#        items:
#          $ref: '#/schema/Address'
#

        
        
        
# sry for changing everything       
#  User:
#    type: object
#    title: User
#    properties:
#      id:
#        format: int64
#        type: integer
#      email:
#        example: pf@imunixx.de
#        type: string
#      activated:
#        example: false
#        type: boolean

# its Ok if this is your workaround to get different examples for swagger
# otherwise you dont need that -> may be there is an other reason plz comment
# may be I dont get what it is for
#  UserCreate:
#    type: object
#    title: UserCreate
#    properties:
#      id:
#        format: int64
#        type: integer
#      email:
#        example: pf@imunixx.de
#        type: string
#      password:
#        example: 03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4
#        type: string
#      userCode:
#        example: 0
#        type: string
#      activated:
#        example: false
#        type: boolean
#
#  UserUpdate:
#    type: object
#    title: UserUpdate
#    properties:
#      id:
#        format: int64
#        type: integer
#      email:
#        example: pf@imunixx.de
#        type: string
#      password:
#        example: 03ac674216f3e15c761ee1a5e255f067953623c8b388b4459e13f978d7c846f4
#        type: string
#      userCode:
#        example: 0
#        type: string
#      activated:
#        example: false
#        type: boolean
